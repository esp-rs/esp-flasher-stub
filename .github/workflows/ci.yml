name: CI

on:
  pull_request:
    branches:
      - main
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # --------------------------------------------------------------------------
  # Cargo check

  check-riscv:
    name: Check RISC-V
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chips: [esp32c3, esp32c2]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          target: riscv32imc-unknown-none-elf
          toolchain: nightly
          components: rust-src
      - name: cargo check
        run: cargo check --target=riscv32imc-unknown-none-elf --features ${{ matrix.chips }}

  check-xtensa:
    name: Check Xtensa
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chips: [esp32, esp32s2, esp32s3]
    env:
      RUSTFLAGS: '--cfg target_has_atomic="8" --cfg target_has_atomic="16" --cfg target_has_atomic="32" --cfg target_has_atomic="ptr"'
    steps:
      - uses: actions/checkout@v3
      - uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          ldproxy: false
          buildtargets: ${{ matrix.chips }}
      - uses: Swatinem/rust-cache@v2
      - name: cargo check
        run: cargo check --target=xtensa-${{ matrix.chips }}-none-elf --features ${{ matrix.chips }}

  # --------------------------------------------------------------------------
  # Formatting & Clippy

  rustfmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: cargo fmt
        run: cargo fmt --all -- --check

  clippy-riscv:
    name: Run clippy on RISC-V builds
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chips: [esp32c3, esp32c2]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          target: riscv32imc-unknown-none-elf
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: cargo clippy
        run: cargo clippy --features ${{ matrix.chips }} --target riscv32imc-unknown-none-elf -- --no-deps

  clippy-xtensa:
    name: Run clippy on Xtensa builds
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chips: [esp32, esp32s2, esp32s3]
    steps:
      - uses: actions/checkout@v3
      - uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          ldproxy: false
          buildtargets: ${{ matrix.chips }}
      - uses: Swatinem/rust-cache@v2
      - name: cargo clippy
        run: cargo clippy -Zbuild-std=core --target=xtensa-${{ matrix.chips }}-none-elf --features ${{ matrix.chips }} -- --no-deps

  # --------------------------------------------------------------------------
  # MSRV Check

  msrv-riscv:
    name: Check RISC-V MSRV
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chips: [esp32c2, esp32c3]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          target: riscv32imc-unknown-none-elf
          toolchain: "1.60.0"
          components: rust-src
      - name: cargo check
        run: cargo check --target=riscv32imc-unknown-none-elf --features ${{ matrix.chips }}

  msrv-xtensa:
    name: Check Xtensa MSRV
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chips: [esp32, esp32s2, esp32s3]
    env:
      RUSTFLAGS: '--cfg target_has_atomic="8" --cfg target_has_atomic="16" --cfg target_has_atomic="32" --cfg target_has_atomic="ptr"'
    steps:
      - uses: actions/checkout@v3
      - uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          ldproxy: false
          buildtargets: ${{ matrix.chips }}
          version: "1.60.0"
      - uses: Swatinem/rust-cache@v2
      - name: cargo check
        run: cargo check --target=xtensa-${{ matrix.chips }}-none-elf --features ${{ matrix.chips }}
